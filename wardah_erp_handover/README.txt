

# โ ุชุนูููุงุช ุงูุชูููุฐ ูู Qoder

## 0) ุงููุชุทูุจุงุช

* ูุงุนุฏุฉ ุจูุงูุงุช **PostgreSQL 14+** (ุฃู **Supabase**).
* ุตูุงุญูุฉ ุงุชุตุงู ุจROLE ููุฏุฑ ููููุฐ DDL/RLS (ูุซุงู: Supabase **service\_role**).
* ุฃุฏุงุฉ ุณุทุฑ ุฃูุงูุฑ `psql` ุฃู Supabase SQL Editor.

> **ูุชุบูุฑุงุช ููููุฉ (ุงุณุชุจุฏููุง):**

* `DB_URL` = ุงุชุตุงู Postgres/Supabase (ูุซุงู: `postgres://...`)
* `TENANT_ID` = UUID ุฌูุฉ โูุฑุฏุฉ ุงูุจูุงูโ (ูุซุงู: `8e5c5c36-...-...`)

---

## 1) ุชุทุจูู ูุฎุทุท ุงููุงุนุฏุฉ ู RLS ู ูุธุงุฆู AVCO

ุงูุชุญ ุชูุฑููุงู ููููุฐ ุจุงูุชุฑุชูุจ:

```bash
psql "$DB_URL" -f wardah-migration-schema.sql
psql "$DB_URL" -f wardah-rls-policies.sql
psql "$DB_URL" -f wardah-avco-functions.sql
```

> ุนูุฏ ุงุณุชุฎุฏุงู ููู ููุญูุฏ ุจุฏูู:
> `psql "$DB_URL" -f migration.sql`

---

## 2) ุชุนููู ุณูุงู ุงููุณุชุฃุฌุฑ (ุฌูุณุฉ ุงูุนูู)

RLS ุนูุฏูุง ุชุนุชูุฏ ุนูู ุงูู JWT Claims. ูู ุฌูุณุฉ `psql`, **ุงุถุจุท ุงูู claim** ูุจู ุงูุงุณุชูุฑุงุฏ:

```sql
-- ุฏุงุฎู psql (ููู ุฌูุณุฉ)
SET LOCAL "request.jwt.claims" = json_build_object(
  'role','service_role',
  'tenant_id','TENANT_ID'  -- โ ุงุณุชุจุฏููุง ุจู UUID ุญูููู
)::text;
```

> ูู Supabase SQL Editor: ูููุฐ ุงูุณุทุฑ ุฃุนูุงู ูุจู ุฃู ูุน ุฃูุงูุฑ ุงูุฅุฏุฑุงุฌ.

---

## 3) ุงุณุชูุฑุงุฏ **ุดุฌุฑุฉ ุงูุญุณุงุจุงุช** (CSV โ JSON โ Upsert)

### 3.1 ุฅูุดุงุก ุฌุฏูู ูุฑุญูู ูุทุงุจู ููุฃุนูุฏุฉ

```sql
drop table if exists stg_coa;
create temp table stg_coa (
  code text, name text, category text, subtype text, parent_code text,
  normal_balance text, allow_posting boolean, is_active boolean,
  currency text, notes text
);
```

### 3.2 ุงุณุชูุฑุงุฏ ุงูู CSV

* ูุน `psql` ูู ุฌูุงุฒู:

```bash
\copy stg_coa from 'wardah_enhanced_coa.csv' with (format csv, header true, encoding 'UTF8')
```

* (ุจุฏูู Supabase): ุงุณุชุฎุฏู **Import** ูู ูุงุฌูุฉ SQL ููุฅุฏุฎุงู ูู `stg_coa`.

### 3.3 ุถุฎููุง ูู ุฌุฏูู ุงูุญุณุงุจุงุช ุนุจุฑ ุงูุฏุงูุฉ

> ูุณุชุฏุนู **fn\_gl\_accounts\_upsert** ุจุจุงูุงูุงุช JSON

```sql
select fn_gl_accounts_upsert(
  'TENANT_ID'::uuid,
  (select jsonb_agg(to_jsonb(s)) from stg_coa s)
);
-- (ููุถูู ุชุดุบูููุง ูุฑูุชูู ูุถูุงู ุฑุจุท parent_id ูู ูุงู ุชุฑุชูุจ ุงูุตููู ุบูุฑ ูุฑูู)
select fn_gl_accounts_upsert(
  'TENANT_ID'::uuid,
  (select jsonb_agg(to_jsonb(s)) from stg_coa s)
);
```

---

## 4) ุชุญููู **ุฎุฑุงุฆุท ุงูุฃุญุฏุงุซ** (GL Mappings)

### 4.1 ุฌุฏูู ูุฑุญูู

```sql
drop table if exists stg_map;
create temp table stg_map (
  event_code text, work_center text, 
  dr_account_code text, cr_account_code text,
  amount_key text, notes text
);
```

### 4.2 ุงุณุชูุฑุงุฏ CSV

```bash
\copy stg_map from 'wardah_gl_mappings.csv' with (format csv, header true, encoding 'UTF8')
```

### 4.3 ุฅุฏุฑุงุฌ ูู ุงูุฌุฏูู ุงููุนูู ูุน ุงุญุชุฑุงู RLS ู Key

```sql
insert into gl_mappings (
  tenant_id, event_code, work_center, line_no,
  dr_account_code, cr_account_code, amount_key, notes
)
select 
  'TENANT_ID'::uuid, event_code, nullif(work_center,''), 1,
  dr_account_code, cr_account_code, coalesce(nullif(amount_key,''),'actual_amount'), notes
from stg_map
on conflict (tenant_id, event_code, coalesce(work_center,''), line_no)
do update set 
  dr_account_code = excluded.dr_account_code,
  cr_account_code = excluded.cr_account_code,
  amount_key     = excluded.amount_key,
  notes          = excluded.notes;
```

---

## 5) **ุงุฎุชุจุงุฑ ุณุฑูุน** ูุฏูุฑุฉ ุชุตููุน/ุจูุน

### 5.1 ุฌุฏูู ูุฑุญูู ููุนูููุงุช ุงููููุฐุฌูุฉ

```sql
drop table if exists stg_txn;
create temp table stg_txn (
  txn_id text, txn_date date, event_code text, work_center text,
  amount numeric(18,2), item text, qty numeric, rate numeric,
  dr_account_code text, cr_account_code text, notes text
);
```

### 5.2 ุงุณุชูุฑุงุฏ ููู ุงูุณููุงุฑูู

```bash
\copy stg_txn from 'sample_transactions.csv' with (format csv, header true, encoding 'UTF8')
```

### 5.3 ุชูููุฏ ูููุฏ ููููุฉ ุชููุงุฆููุง ูู ุงูุฎุฑุงุฆุท

```sql
-- ููุฏ ููู ุนูููุฉ (txn_id) ุงุนุชูุงุฏูุง ุนูู event_code/center
do $$
declare
  v_jid uuid;
  v_ln  int;
begin
  for v_jid in
    select gen_random_uuid()
  loop
    null; -- placeholder
  end loop;

  for r in (
    select * from stg_txn order by txn_date, txn_id
  ) loop
    insert into gl_journal (tenant_id, jrn_date, ref)
    values ('TENANT_ID'::uuid, r.txn_date, r.txn_id)
    returning id into v_jid;

    v_ln := 0;

    -- ุงุฌูุจ ูู ุงููุงุจููุฌ ุงููุทุงุจู ููุญุฏุซ + ูุฑูุฒ ุงูุนูู (ุฃู null)
    for m in (
      select * from gl_mappings
      where tenant_id = 'TENANT_ID'::uuid
        and event_code = r.event_code
        and (work_center is null or work_center = nullif(r.work_center,''))
      order by line_no
    ) loop
      v_ln := v_ln + 1;

      insert into gl_entries (
        tenant_id, journal_id, line_no, account_code, dr, cr, work_center, notes
      )
      values (
        'TENANT_ID'::uuid, v_jid, v_ln, m.dr_account_code,
        case m.amount_key 
          when 'actual_amount' then coalesce(r.amount,0)
          when 'net_amount'    then coalesce(r.amount,0)
          when 'vat_amount'    then coalesce(r.amount,0)
          else coalesce(r.amount,0)
        end,
        0,
        nullif(r.work_center,''),
        coalesce(r.notes, m.notes)
      );

      v_ln := v_ln + 1;

      insert into gl_entries (
        tenant_id, journal_id, line_no, account_code, dr, cr, work_center, notes
      )
      values (
        'TENANT_ID'::uuid, v_jid, v_ln, m.cr_account_code,
        0,
        case m.amount_key 
          when 'actual_amount' then coalesce(r.amount,0)
          when 'net_amount'    then coalesce(r.amount,0)
          when 'vat_amount'    then coalesce(r.amount,0)
          else coalesce(r.amount,0)
        end,
        nullif(r.work_center,''),
        coalesce(r.notes, m.notes)
      );
    end loop;
  end loop;
end $$;
```

### 5.4 ุณููู ุชุดูู

```sql
-- ุฑุตูุฏ WIP/FG/COGS
select account_code, sum(dr)-sum(cr) as balance
from gl_entries e
where tenant_id = 'TENANT_ID'::uuid
  and account_code in ('134100','134200','134300','134400','135100','135110','540000')
group by 1
order by 1;

-- ุงูุชูุงูู ุงููุฒุฏูุฌ (DR=CR) ููู ููุฏ
select j.id, j.ref, j.jrn_date, 
       sum(e.dr) as total_dr, sum(e.cr) as total_cr
from gl_journal j
join gl_entries e on e.journal_id = j.id
where j.tenant_id = 'TENANT_ID'::uuid
group by 1,2,3
having abs(sum(e.dr) - sum(e.cr)) > 0.001;
```

> ูู ุธูุฑ ูุฑู ุชุญููู ุตูุงุนู (ูุนูู ููุงุจู ูุทุจูู)ุ ุงุณุชุฎุฏู ุฏูุงู/ุฃูุงูุฑ ุงูุฅููุงู ุฅูู **593100/593200** ุญุณุจ ุฏููู AVCO.

---

## 6) ููุงุท ุถุจุท ูููุฉ

* **ุงูููุงุฏ/ุงูุฃุฌูุฑ/ุงูุฃููุฑููุฏ ุงููุทุจูู โ WIP** (1341/2/3/4xx).
* **ุงูุฃููุฑููุฏ ุงููุนูู** ุนูู 5131/5132โฆ ููุงุจู ุงูููุฑุฏ/ุงูุจูู.
* **ุงูุชุญููู WIPโFG** ุซู **COGS ุนูุฏ ุงูุชุณููู**.
* **VAT**: ูุตู ุฅูุฑุงุฏ ุงูุตุงูู ุนู **VAT Output** (217000) ู**VAT Input** (116000).

---

## 7) ูุจูู ุงููููุฉ (Acceptance)

* ุฌููุน ูููุงุช SQL ุชูููููุฐ ุจุฏูู ุฃุฎุทุงุก.
* ุงุณุชูุฑุงุฏ CoA ู GL Mappings ุจูุฌุงุญ.
* ุณููุงุฑูู ุงูุนููุฉ ูููุดุฆ ูููุฏ ูุชูุงุฒูุฉ (DR=CR) ูุชุธูุฑ ุฃุฑุตุฏุฉ ููุทููุฉ ูู WIP/FG/COGS.
* ุชูุฑูุฑ ุงุณุชุนูุงูุงุช RLS ุจูุฌุงุญ ููู ุฏูุฑ (ุฅู ูุฒู).

---

### ุฃู ูุดููุฉ ุชูุงุฌููุงุ

* ุฅู ุชุนุฐูุฑ ุงุณุชูุฑุงุฏ CSV ูู Supabase SQL Editorุ ุงุณุชุฎุฏู `psql \copy` ุฃู ุงุฑูุน CSV ุฅูู **Storage** ูุงุณุชุนูู ูุธููุฉ `http_get()`/ETL (ุงุฎุชูุงุฑู).
* ุฅู ูู ุชููุนูู ุงูู claims: ุงุณุชุนูู ุงูุณุทุฑ **SET LOCAL "request.jwt.claims"** ููุง ุจุงูุฃุนูู ุฃู ูููุฐ ุนุจุฑ **service\_role** ุฏุงุฎูููุง.

ุจุงูุชูููู ูุง Qoder! ๐
